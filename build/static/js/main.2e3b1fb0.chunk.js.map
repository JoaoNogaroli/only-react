{"version":3,"sources":["components/Contas.js","components/ContaForm.js","App.js","reportWebVitals.js","index.js"],"names":["Contas","contas","List","map","conta","Item","ContaForm","onNewTeste","onNewConta","useState","valor","setValor","radio","setRadio","Form","style","fontSize","className","Field","type","value","name","onChange","e","target","Input","placeholder","Button","fontFamily","onClick","a","conta_total","fetch","method","headers","body","JSON","stringify","response","then","json","data","final","console","log","ok","App","setContas","resul","setResul","teste","setTeste","useEffect","class","textAlign","justifyContent","currentConta","currentTeste","height","overflow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e3b1fb0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {List} from \"semantic-ui-react\";\r\n\r\nexport const Contas = ({ contas }) => {\r\n\r\n    return  (\r\n        \r\n        <List>\r\n        {contas.map(conta => {\r\n            return(\r\n                <List.Item key={conta}>\r\n                    <a>{conta[0]} : </a><a>  {conta[1]}</a>\r\n                </List.Item>\r\n            );\r\n        })}\r\n        </List>\r\n    )\r\n    \r\n}","import React, {useState} from 'react';\r\nimport { Form, Input, Button} from 'semantic-ui-react';\r\nexport const ContaForm = ({onNewTeste, onNewConta}) => {\r\n    const [valor, setValor] = useState('');\r\n\r\n    const [radio, setRadio] = useState();\r\n    const styles = {\r\n        \r\n        fontFamily: \"KIONA\",\r\n        width:'100%',\r\n        \r\n\r\n    }\r\n    const styles2 = {\r\n        width:'100%',\r\n\r\n        border: \"1px solid black\",\r\n        borderRadius: \"5px\",\r\n    }\r\n\r\n    return(\r\n        \r\n        <Form style={{fontSize:'20px'}}>\r\n            <div className=\"form-group\">\r\n            <div>\r\n\r\n            <Form.Field>\r\n                <label>\r\n                    \r\n                    <input type=\"radio\" \r\n                    value=\"Entrada\"\r\n                    name=\"radiogroupe\"\r\n                    onChange={(e) => {setRadio(e.target.value)}}\r\n                    />Entrada\r\n                </label>\r\n\r\n            </Form.Field>\r\n            <Form.Field>\r\n            <label>\r\n                   \r\n                    <input type=\"radio\" \r\n                    value=\"Saída\"\r\n                    name=\"radiogroupe\"\r\n                    onChange={(e) => {setRadio(e.target.value)}}                    /> Saída\r\n                </label>\r\n                \r\n\r\n            </Form.Field>\r\n            <br></br>\r\n            </div>\r\n            </div>\r\n            <div>\r\n            <Form.Field >\r\n                <Input placeholder=\"Insira o Valor\"\r\n                    name='valor'\r\n                    value={valor}\r\n                    onChange={e => setValor(e.target.value)} />\r\n            </Form.Field>\r\n            <br></br>\r\n            </div>\r\n            \r\n            <Form.Field>\r\n            <Button \r\n                style={{fontFamily:'KIONA', fontSize:'20px'}}\r\n                className=\"btn btn-info  w-100 p-3\"\r\n                onClick={async () => {\r\n                    \r\n\r\n                    const conta_total = {\r\n                        '0':radio,\r\n                        '1':valor};\r\n                    const response = await fetch('/enviar', {\r\n                        method:'POST',\r\n                        headers:{\r\n                            \"content_type\":\"application/json\",\r\n                        },\r\n                        body: JSON.stringify(conta_total)\r\n                    })\r\n\r\n                    const teste = await fetch('/resultado', {\r\n                        method:'POST',\r\n                        headers:{\r\n                            \"content_type\":\"application/json\",\r\n                        },\r\n                    }).then(response => {\r\n                        response.json().then(data => {\r\n                            const final = data;\r\n                            console.log(data)\r\n                            \r\n                            console.log(\"----FINAL\")\r\n                            console.log(final)\r\n                            onNewTeste(final);\r\n                        });\r\n                    }); \r\n\r\n                    \r\n                    \r\n                    if(response.ok){\r\n                        console.log(response);\r\n                        //console.log(conta_total);\r\n                        \r\n                        \r\n                        onNewConta(conta_total);\r\n                        setValor('');\r\n                    }\r\n                }}\r\n            >Enviar</Button>\r\n            </Form.Field><br></br><br></br><br></br>\r\n        </Form>\r\n      \r\n    )\r\n}","import React, { useEffect, useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Contas} from './components/Contas';\nimport {ContaForm} from './components/ContaForm';\n\nfunction App() {\n  \n  const [contas, setContas] = useState([]);\n  const [resul, setResul] = useState([]);\n  const [teste, setTeste] = useState('0');\n  /*\n  useEffect(() => {\n    fetch(\"/deletar\").then(response => {\n      console.log(response)\n    })\n  })\n  */\n  \n\n  useEffect(() => {\n    fetch(\"/resultado\").then(response => {\n      response.json().then(data => {\n        //console.log(\"------data_-------\")\n        //console.log(data)\n        setResul(data);\n     })\n    \n  });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/receber\").then(response => {\n        response.json().then(data => {\n          //console.log(\"------data_-------\")\n          //console.log(data)\n          setContas(data);\n        })\n      \n    });\n    \n  }, []);\n  /*\n  useEffect(() => {\n    fetch(\"/enviar\").then(response => {\n      console.log(\"ok\")\n    })\n  })*/\n\n  return (\n   \n      <div className='container shadow-sm p-3 mb-5 bg-white rounded' >\n        \n        \n            <div class=\"container\">\n              \n            <br></br><hr></hr><br></br><br></br>\n              <div class=\"row\">\n                <div class=\"col\" style={{textAlign:'center',justifyContent:'center'}}>\n                <ContaForm onNewConta={conta =>\n                  setContas(currentConta => [conta, ...currentConta])}\n\n                  onNewTeste={teste =>\n                    setTeste(currentTeste => [teste])}\n                  />\n                </div>\n               \n                </div>\n                <div class=\"row\">\n                <div class=\"col\" style={{height: 300, overflow:'auto'}}>\n                <Contas contas={contas}/>\n                </div>\n                <div class=\"col\">\n                  <br></br><br></br><br></br>\n                <h4>Valor anterior: R$: {resul}</h4>\n              <h3>Valor Atual: R$: {teste}</h3>\n                </div>\n               \n              </div>\n            </div>\n      </div>\n    \n      \n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}